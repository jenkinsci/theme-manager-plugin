<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:f="/lib/form" xmlns:st="jelly:stapler">
  <f:section title="${%Built-in Themes}">
    <j:invokeStatic var="descriptors" className="io.jenkins.plugins.thememanager.ThemeManagerFactoryDescriptor" method="all"/>

    <style>
      .app-theme-picker {
        display: grid;
        grid-template-columns: repeat(auto-fill,minmax(200px,1fr));
        grid-gap: 2rem;
        margin-bottom: 2rem;
      }
      .app-theme-picker__item {
        position: relative;
      }
      .app-theme-picker__item input {
        position: absolute;
        width: 1px;
        height: 1px;
        margin: 0;
        padding: 0;
        overflow: hidden;
        clip: rect(0 0 0 0);
        clip-path: inset(50%);
      }
      .app-theme-picker__item input:focus + label::before, .app-theme-picker__item input:active + label::before {
        border-color: var(--focus-input-border);
        box-shadow: var(--form-input-glow--focus);
      }
      .app-theme-picker__item input:checked + label::before {
        border: 4px solid var(--focus-input-border);
      }
      .app-theme-picker__item input:checked + label span::before {
        transition: 0.2s ease;
        width: 18px;
        min-width: 18px;
        margin-right: 1ch;
        transform: scale(1);
        opacity: 1;
        font-size: 10px;
      }
      .app-theme-picker__item label {
        display: flex;
        justify-content: flex-start;
        flex-direction: column;
        text-align: center;
        cursor: pointer;
        font-weight: 500;
      }
      .app-theme-picker__item label div {
        display: flex;
        flex-direction: column;
        width: 100%;
        border-radius: 10px;
        margin-bottom: 0.75rem;
        overflow: hidden;
      }
      .app-theme-picker__item label div svg {
        width: 100%;
        height: auto;
      }
      .app-theme-picker__item label span {
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
      }
      .app-theme-picker__item label span::before {
        content: "âœ“";
        display: flex;
        align-items: center;
        justify-content: center;
        width: 0;
        height: 18px;
        min-width: 0;
        min-height: 18px;
        background: var(--focus-input-border);
        border-radius: 100%;
        color: var(--background);
        font-size: 0;
        font-weight: 800;
        transform: scale(0);
        opacity: 0;
        transition: width 0.2s ease 0.2s, min-width 0.2s ease 0.2s, margin-right 0.2s ease 0.2s, transform 0.2s ease, opacity 0.2s ease, font-size 0.2s ease;
      }
      .app-theme-picker__item label::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        border-radius: 10px;
        aspect-ratio: 1.7777777777778;
        border: 2px solid var(--input-border);
        box-shadow: 0 0 0 10px transparent;
        transition: var(--standard-transition);
      }
      .app-theme-picker__item label:hover::before {
        border-color: var(--input-border-hover);
      }
    </style>

    <st:adjunct includes="lib.form.radioBlock.radioBlock"/>

    <f:entry title="${%Theme}" field="theme">
      <div class="app-theme-picker">
        <j:set var="currentInstance" value="${instance['theme']}" />
        <j:set var="currentDescriptor" value="${currentInstance.descriptor}" />
        <j:set var="uniqueId" value="${h.generateId()}" />

        <j:forEach var="theme" items="${descriptors}" varStatus="loop">
          <div class="radioBlock-container">
            <!-- this ID marks the beginning -->
            <div class="tr help-sibling radio-block-start row-group-start row-set-start" hasHelp="false">
              <div class="app-theme-picker__item">
                <input type="radio"
                       name="${uniqueId}.theme"
                       id="${uniqueId}.theme-${loop.index}"
                       value="${loop.index}"
                       class="radio-block-control block-control"
                       checked="${currentDescriptor == theme ? 'true' : null}"/>
                <label for="${uniqueId}.theme-${loop.index}">
                  <div>
                    <svg width="320px" height="180px" viewBox="0 0 320 180" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                      <g stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <rect fill="var(--background)" x="0" y="0" width="320" height="180"></rect>
                        <rect fill="var(--panel-border-color)" x="0" y="30" width="86" height="150"></rect>
                        <rect fill="var(--header-bg-classic)" x="0" y="0" width="320" height="30"></rect>
                        <rect fill="var(--text-color)" x="106" y="50" width="100" height="20"></rect>
                        <rect fill="var(--text-color-secondary)" x="106" y="100" width="60" height="20"></rect>
                      </g>
                    </svg>
                  </div>
                  <span>${theme.displayName}</span>
                </label>
              </div>
            </div>
            <f:class-entry descriptor="${theme}" />
            <!-- end marker -->
            <div class="tr row-set-end radio-block-end row-group-end" style="display:none"/>
          </div>
        </j:forEach>
      </div>
    </f:entry>
    
    <f:entry field="disableUserThemes">
      <f:checkbox title="${%Do not allow users to select a different theme}" />
    </f:entry>
  </f:section>
</j:jelly>
